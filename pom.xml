<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.avereon.pom</groupId>
		<artifactId>jar</artifactId>
		<version>3.3.3</version>
	</parent>

	<groupId>com.avereon</groupId>
	<artifactId>zarra</artifactId>
	<version>0.8-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>Zarra</name>
	<description>UX Utility library</description>
	<inceptionYear>2019</inceptionYear>

	<developers>
		<developer>
			<name>Mark Soderquist</name>
			<email>mark@soderquist.net</email>
			<roles>
				<role>Architect</role>
			</roles>
		</developer>
	</developers>

	<repositories>
		<repository>
			<id>avn</id>
			<url>https://repo.avereon.com/avn</url>
		</repository>
	</repositories>

	<properties>
		<product-name>${project.name}</product-name>
		<product-identifier>${project.artifactId}</product-identifier>
		<project-timestamp>${maven.build.timestamp}</project-timestamp>

		<!-- Needs to stay at a version compatible with all projects and the website -->
		<!-- Keep consistent with the CI pipeline -->
		<java.version>17</java.version>

		<!-- Version numbers updated 02 Jul 2020 -->
		<!-- Runtime dependencies -->
		<zevra.version>[0.7,)</zevra.version>
		<openjfx.version>[17.0,)</openjfx.version>
		<image4j.version>0.7.2</image4j.version>

		<!-- Test dependencies -->
		<testfx.version>[4.0,)</testfx.version>
	</properties>

	<dependencies>

		<dependency>
			<groupId>com.avereon</groupId>
			<artifactId>zevra</artifactId>
			<version>${zevra.version}</version>
		</dependency>

		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${openjfx.version}</version>
		</dependency>

		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-swing</artifactId>
			<version>${openjfx.version}</version>
		</dependency>

		<dependency>
			<!-- https://github.com/imcdonagh/image4j -->
			<groupId>net.sf.image4j</groupId>
			<artifactId>image4j</artifactId>
			<version>${image4j.version}</version>
		</dependency>

		<dependency>
			<groupId>org.testfx</groupId>
			<artifactId>testfx-core</artifactId>
			<version>${testfx.version}</version>
			<scope>provided</scope>
			<exclusions>
				<!-- Exclude the openjfx libraries, they are already available -->
				<exclusion>
					<groupId>org.openjfx</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.testfx</groupId>
			<artifactId>testfx-junit5</artifactId>
			<version>${testfx.version}</version>
			<scope>compile</scope>
			<exclusions>
				<!-- Exclude the junit-jupiter-api, it is already available-->
				<exclusion>
					<groupId>org.junit.jupiter</groupId>
					<artifactId>junit-jupiter-api</artifactId>
				</exclusion>
				<!-- Exclude the openjfx libraries, they are already available -->
				<exclusion>
					<groupId>org.openjfx</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- This configuration allows the JUnit test runner to find the unit tests -->
				<configuration>
					<argLine>-Xmx128m --add-opens=javafx.graphics/com.sun.glass.ui=ALL-UNNAMED --add-opens=javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</argLine>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<failOnError>false</failOnError>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>

